#include "types/JsAny.hpp"
#include "global/global.hpp"
#include "types/objects/Types.hpp"
#include "customOperators/CustomOperators.hpp"

int main() {
    JS::Any A, B, useA;
    A = JS::Any(JS::InternalObject::create<JS::Function>([&](const JS::Any &thisArg, const JS::Any &arguments) -> JS::Any {

        {
            thisArg[u"name"] = JS::Any(u"A");
        }
        return JS::Any();
    }, 0, u"A"));
    B = JS::Any(JS::InternalObject::create<JS::Function>([&](const JS::Any &thisArg, const JS::Any &arguments) -> JS::Any {

        {
            thisArg[u"name"] = JS::Any(u"B");
        }
        return JS::Any();
    }, 0, u"B"));
    useA = JS::Any(false);
    console[u"log"](NEW((useA && A || B)));
    return 0;
}
