#include "types/JsAny.hpp"
#include "global/global.hpp"
#include "types/objects/Types.hpp"
#include "customOperators/CustomOperators.hpp"

int main() {
    JS::Any x, MyNS;
    x = JS::Any(u"component");
    MyNS = JS::Any(std::make_shared<JS::Object>(std::unordered_map<std::u16string, JS::Any>{

    }));
    MyNS[u"Widget"] = JS::Any(std::make_shared<JS::Function>([&](const JS::Any &thisArg, const JS::Any &arguments) -> JS::Any {

        {
            thisArg[u"init"] = JS::Any(std::make_shared<JS::Function>([&](const JS::Any &thisArg, const JS::Any &arguments) -> JS::Any {
                JS::Any x = arguments[u"0"];

                {
                    thisArg[u"x"] = x;
                    return thisArg;
                }
                return JS::Any();
            }, 1, u"Anonymous"));
            thisArg[u"render"] = JS::Any(std::make_shared<JS::Function>([&](const JS::Any &thisArg, const JS::Any &arguments) -> JS::Any {

                {
                    return JS::Any(u"Rendered ") + thisArg[u"x"];
                }
                return JS::Any();
            }, 0, u"Anonymous"));
            return thisArg;
        }
        return JS::Any();
    }, 0, u"Anonymous"));
    console[u"log"](NEW(MyNS[u"Widget"])[u"init"](x)[u"render"]());
    return 0;
}
